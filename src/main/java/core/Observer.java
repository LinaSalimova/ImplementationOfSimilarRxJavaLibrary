package core;

/**
 * Интерфейс Observer — основной контракт для подписчика (наблюдателя) в реактивном программировании.
 * Используется для получения данных, ошибок и события завершения от Observable.
 *
 * @param <T> Тип элементов, которые будут получены наблюдателем
 */
public interface Observer<T> {
    /**
     * Вызывается каждый раз, когда Observable эмитирует новый элемент.
     *
     * @param item новый элемент потока
     */
    void onNext(T item);

    /**
     * Вызывается, если в Observable произошла ошибка.
     * После вызова onError больше никаких событий не поступает.
     *
     * @param t объект ошибки (исключение)
     */
    void onError(Throwable t);

    /**
     * Вызывается при успешном завершении потока данных.
     * После onComplete больше никаких событий не поступает.
     */
    void onComplete();
}
